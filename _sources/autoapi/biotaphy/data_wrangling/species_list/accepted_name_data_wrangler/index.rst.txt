:py:mod:`biotaphy.data_wrangling.species_list.accepted_name_data_wrangler`
==========================================================================

.. py:module:: biotaphy.data_wrangling.species_list.accepted_name_data_wrangler

.. autoapi-nested-parse::

   Accepted name wrangler for species list using OTOL names.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   biotaphy.data_wrangling.species_list.accepted_name_data_wrangler.BiotaphyAcceptedNameSpeciesListWrangler




.. py:class:: BiotaphyAcceptedNameSpeciesListWrangler(name_map=None, name_resolver=None, purge_failures=True, out_map_filename=None, map_write_interval=100, out_map_format='json', **params)

   Bases: :py:obj:`lmpy.data_wrangling.species_list.accepted_name_wrangler.AcceptedNameSpeciesListWrangler`

   Constructor for BiotaphyAcceptedNameSpeciesListModifier class.

   :param name_map: A map of original name to accepted name.
   :type name_map: dict
   :param name_resolver: If provided, use this method for getting new
                         accepted names.  If set to 'gbif', use GBIF name resolution.
   :type name_resolver: str or Method
   :param purge_failures: Should failures be purged from the tree.
   :type purge_failures: bool
   :param out_map_filename: A file location to write the updated name map.
   :type out_map_filename: str
   :param map_write_interval: Update the name map output file after each set of
                              this many iterations.
   :type map_write_interval: int
   :param out_map_format: The format to write the names map (csv or json).
   :type out_map_format: str
   :param \*\*params: Keyword parameters to pass to _TreeDataWrangler.
   :type \*\*params: dict

   .. py:attribute:: name
      :annotation: = BiotaphyAcceptedNameSpeciesListWrangler

      

   .. py:attribute:: version
      :annotation: = 1.0

      


